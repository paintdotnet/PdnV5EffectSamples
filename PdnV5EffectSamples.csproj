<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net9.0-windows</TargetFramework>
    <RootNamespace>PaintDotNet.Effects.Samples</RootNamespace>
    <Nullable>enable</Nullable>
    <ImportWindowsDesktopTargets>true</ImportWindowsDesktopTargets>
    <UseWindowsForms>true</UseWindowsForms>
    <UseWPF>true</UseWPF>    
    <!-- This is necessary so that the build copies the version of nuget packages we're referencing,
         instead of copying the ones that Paint.NET is using (which may be trimmed and/or a different version) -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <ProduceReferenceAssembly>False</ProduceReferenceAssembly>
    <Deterministic>False</Deterministic>
    <AssemblyVersion>1.0.*</AssemblyVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <NoWarn>1701;1702;CS7035</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <NoWarn>1701;1702;CS7035</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AutoConstructor" Version="5.5.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="ComputeSharp.D2D1" Version="3.0.1" />
    <PackageReference Include="ILRepack" Version="2.0.34">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NET.ILLink.Tasks" Version="9.0.0-preview.6.24327.7" />
  </ItemGroup>
  <PropertyGroup>
    <!-- Set this to the location where you have Paint.NET installed. If you have the Microsoft
         Store version, you should download the portable version and point this at that. -->
    <PdnRoot>C:\Program Files\paint.net</PdnRoot>
  </PropertyGroup>
  <ItemGroup>
    <!-- Be sure to set Private=False (aka CopyLocal=false) on the Paint.NET assemblies 
         so they are not copied to the output folder -->
    <Reference Include="PaintDotNet.Base">
      <HintPath>$(PdnRoot)\PaintDotNet.Base.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.ComponentModel">
      <HintPath>$(PdnRoot)\PaintDotNet.ComponentModel.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.Core">
      <HintPath>$(PdnRoot)\PaintDotNet.Core.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.Effects.Core">
      <HintPath>$(PdnRoot)\PaintDotNet.Effects.Core.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.Effects.Gpu">
      <HintPath>$(PdnRoot)\PaintDotNet.Effects.Gpu.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.Fundamentals">
      <HintPath>$(PdnRoot)\PaintDotNet.Fundamentals.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.Framework">
      <HintPath>$(PdnRoot)\PaintDotNet.Framework.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.Primitives">
      <HintPath>$(PdnRoot)\PaintDotNet.Primitives.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.PropertySystem">
      <HintPath>$(PdnRoot)\PaintDotNet.PropertySystem.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.Windows">
      <HintPath>$(PdnRoot)\PaintDotNet.Windows.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.Windows.Core">
      <HintPath>$(PdnRoot)\PaintDotNet.Windows.Core.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="PaintDotNet.Windows.Framework">
      <HintPath>$(PdnRoot)\PaintDotNet.Windows.Framework.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <PropertyGroup>
    <illink>C:\Users\rick\.nuget\packages\microsoft.net.illink.tasks\8.0.100-1.23067.1\tools\net7.0\illink.dll</illink>
  </PropertyGroup>
  <Target Name="TrimAndMerge" AfterTargets="PostBuildEvent" Condition="'$(ConfigurationName)' == 'Release'">
    <!-- Trimming with ILLink -->
    <Exec Command="dotnet exec &quot;$(illink)&quot; -a &quot;$(TargetPath)&quot; all --trim-mode copy --action copy -d $(TargetDir) --skip-unresolved --action link &quot;ComputeSharp.Core&quot; --action link &quot;ComputeShare.D2D1&quot; -out &quot;$(TargetDir)output&quot;" />
    <!-- Merge with ILRepack -->
    <Exec Command="C:\Users\rick\.nuget\packages\ilrepack\2.0.18\tools\ilrepack /internalize /union &quot;$(TargetDir)output\$(TargetName).dll&quot; &quot;$(TargetDir)output\ComputeSharp.Core.dll&quot; &quot;$(TargetDir)output\ComputeSharp.D2D1.dll&quot; /lib:&quot;$(PdnRoot)&quot; /out:&quot;$(TargetPath)&quot;" />
    <!-- Remove the output directory and its contents created by illink -->
    <Delete Files="$(TargetDir)output" ContinueOnError="false" />
    <RemoveDir Directories="$(TargetDir)output" ContinueOnError="false" />
    <!-- Remove ComputeSharp DLLs that are now merged -->
    <Delete Files="$(TargetDir)ComputeSharp.Core.dll" ContinueOnError="false" />
    <Delete Files="$(TargetDir)ComputeSharp.D2D1.dll" ContinueOnError="false" />
  </Target>
</Project>
